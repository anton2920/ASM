{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rest",
				"registers\t(menu.s)"
			],
			[
				"STD",
				"STDOUT"
			],
			[
				"MEN",
				"MENUBUF_LEN"
			],
			[
				"err",
				"error_open"
			],
			[
				"op",
				"open_database_exit"
			],
			[
				"open",
				"open_database"
			],
			[
				"ope",
				"open_database"
			],
			[
				"cre",
				"create_database_change_name"
			],
			[
				"file",
				"file_exists"
			],
			[
				"len",
				"len_file_exists"
			],
			[
				"loo",
				"lookout_for_cr"
			],
			[
				"lo",
				"lookout_for_cr"
			],
			[
				"cr",
				"create_database_exit"
			],
			[
				"fi",
				"function's"
			],
			[
				"crea",
				"create_database_exit"
			],
			[
				"cha",
				"change_name"
			],
			[
				"ST",
				"STDOUT"
			],
			[
				"erro",
				"error_creating"
			],
			[
				"qui",
				"quit_sure"
			],
			[
				"data",
				"create_database_create"
			],
			[
				"men",
				"menu_loop"
			],
			[
				"call",
				"call_quit"
			],
			[
				"ME",
				"MENUBUF"
			],
			[
				"fil",
				"file_exists"
			],
			[
				"F",
				"FILENAME_LEN"
			],
			[
				"le",
				"len_filename_line"
			],
			[
				"filena",
				"filename_line"
			],
			[
				"pr",
				"prt_ln"
			],
			[
				"st",
				"strcmp_end_loop"
			],
			[
				"mo",
				"movb\t(menu.s)"
			],
			[
				"BU",
				"buffer2"
			],
			[
				"n",
				"n"
			],
			[
				"yes",
				"yes_two"
			],
			[
				"check",
				"check_num"
			],
			[
				"menu_",
				"menu_error"
			],
			[
				"qu",
				"quit_line"
			],
			[
				"a",
				"answer"
			],
			[
				"len_ans",
				"len_answer1\t(a1.s)"
			],
			[
				"ans",
				"answer1\t(a1.s)"
			],
			[
				"no",
				"no_cmd"
			],
			[
				"ASM",
				"ASM_ARGS"
			],
			[
				"ro",
				"routines.o"
			],
			[
				"AS",
				"ASM_ARGS"
			],
			[
				"A",
				"ARGS"
			],
			[
				"main",
				"main.o"
			],
			[
				"ma",
				"main.s"
			],
			[
				"sub",
				"subset_if"
			],
			[
				"subs",
				"subset_else"
			],
			[
				"ip",
				"iprint_print_0"
			],
			[
				"ipr",
				"iprint_fin"
			],
			[
				"pri",
				"print_arr_buf_loop_end"
			],
			[
				"su",
				"subset_main_loop_end"
			],
			[
				"subse",
				"subset_main_loop"
			],
			[
				"B",
				"BUF"
			],
			[
				"numle",
				"numlen_loop"
			],
			[
				"nu",
				"numlen_loop_end"
			],
			[
				"pu",
				"putchar"
			],
			[
				"i",
				"iprint_else"
			],
			[
				"at",
				"atoi_main_loop"
			],
			[
				"ato",
				"atoi_main_loop"
			],
			[
				"popl",
				"popl"
			],
			[
				"re",
				"registers"
			],
			[
				"pro",
				"print_arr_loop_end"
			],
			[
				"prin",
				"print_arr"
			],
			[
				"ne",
				"len_newline"
			],
			[
				"NU",
				"NUM_BUF_SIZE"
			],
			[
				"sum",
				"sum_of_elem"
			],
			[
				"ar",
				"argv"
			],
			[
				"Res",
				"Restoring"
			],
			[
				"edx",
				"edx"
			],
			[
				"ret",
				"ret"
			],
			[
				"res",
				"registers"
			],
			[
				"atio",
				"atoi_main_loop_end"
			],
			[
				"BUF",
				"BUFSIZE"
			],
			[
				"inn",
				"inner_loop"
			],
			[
				"e",
				"edx_addr"
			],
			[
				"out",
				"outer_loop_end"
			],
			[
				"new",
				"newline"
			],
			[
				"er",
				"error_line"
			],
			[
				"an",
				"answer3"
			],
			[
				"fu",
				"function's"
			],
			[
				"bu",
				"buffer2"
			],
			[
				"ot",
				"output1"
			],
			[
				"ou",
				"output1"
			],
			[
				"SYS",
				"SYS_READ"
			],
			[
				"for",
				"format_output1"
			],
			[
				"dig",
				"dig_sum_mul"
			],
			[
				"format_po",
				"format_output1\t(a3.s)"
			],
			[
				"fo",
				"for_loop"
			],
			[
				"se",
				"second\t(a2.s)"
			],
			[
				"format",
				"format_input\t(a2.s)"
			],
			[
				"co",
				"count"
			],
			[
				"arr",
				"array1"
			],
			[
				"beg",
				"begin"
			],
			[
				"prog",
				"program\tdeclaration"
			],
			[
				"str",
				"str_winter"
			],
			[
				"str_",
				"str_summer"
			],
			[
				"ca",
				"case_7"
			],
			[
				"format_",
				"format_answer\t(a1.s)"
			],
			[
				"form",
				"format_answer2"
			],
			[
				"if",
				"if_true"
			],
			[
				"fp",
				"format_input"
			],
			[
				"f",
				"format_input"
			],
			[
				"p",
				"pushl"
			],
			[
				"sec",
				"section"
			],
			[
				"0x",
				"0x8"
			],
			[
				"add",
				"addl"
			],
			[
				"N",
				"N"
			],
			[
				"fro",
				"format_output2"
			],
			[
				"K",
				"K_VAR"
			],
			[
				"forma",
				"format_output\t(a1.s)"
			],
			[
				"HD",
				"HD_FLAG_OFFSET"
			],
			[
				"equ",
				"equals"
			],
			[
				"all",
				"alloc_here"
			],
			[
				"al",
				"alloc_next_pos"
			],
			[
				"cu",
				"current"
			],
			[
				"d",
				"d"
			],
			[
				"inc",
				"include"
			],
			[
				"fl",
				"fclose"
			],
			[
				"in",
				"inputs"
			],
			[
				"ste",
				"stepx"
			],
			[
				"ri",
				"rightx"
			],
			[
				"fin",
				"finput"
			],
			[
				"mu",
				"multiplier2"
			],
			[
				"flag",
				"flag"
			]
		]
	},
	"buffers":
	[
		{
			"file": "lab/RGR/main.s",
			"settings":
			{
				"buffer_size": 619,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lab/RGR/menu.s",
			"settings":
			{
				"buffer_size": 10483,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lab/RGR/routines.s",
			"settings":
			{
				"buffer_size": 5209,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lab/lab_05/routines.s",
			"settings":
			{
				"buffer_size": 5247,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/anton/C/lab/lab_15/menu.c",
			"settings":
			{
				"buffer_size": 8887,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/C++/C++ Single File.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"color ",
				"UI: Select Color Scheme"
			],
			[
				"colo",
				"Code Folding: Fold Tag Attributes"
			],
			[
				"col",
				"UI: Select Color Scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"INstal",
				"Package Control: Install Package"
			],
			[
				"Remove ",
				"Package Control: Remove Package"
			],
			[
				"Instal",
				"Package Control: Install Package"
			],
			[
				"",
				"About"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 412.0,
		"history":
		[
			"while True:",
			"2+2",
			"ver",
			"ls",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/anton/ASM",
		"/home/anton/ASM/experiments",
		"/home/anton/ASM/lab",
		"/home/anton/ASM/lab/lab_04",
		"/home/anton/ASM/lab/lab_06",
		"/home/anton/ASM/lab/RGR"
	],
	"file_history":
	[
		"/home/anton/ASM/lab/lab_04/a1.s",
		"/home/anton/ASM/lab/lab_04/Makefile",
		"/home/anton/ASM/lab/RGR/Makefile",
		"/home/anton/ASM/asm.sublime-project",
		"/home/anton/ASM/lab/lab_05/tasks.s",
		"/home/anton/ASM/lab/lab_05/a1.s",
		"/home/anton/ASM/lab/lab_07",
		"/home/anton/ASM/lab/lab_05/main.c",
		"/home/anton/ASM/lab/lab_05/atoi.c",
		"/home/anton/C/experiments/LowLevelFile/libs/rwcul.c",
		"/home/anton/ASM/lab/lab_05/atoi.s",
		"/home/anton/ASM/lab/lab_05/a1.d",
		"/home/anton/ASM/lab/lab_02/a1.s",
		"/home/anton/ASM/lab/lab_C/lab_18/a6.s",
		"/home/anton/ASM/lab/lab_C/lab_18/a5.s",
		"/home/anton/ASM/lab/lab_C/lab_18/a4.s",
		"/home/anton/ASM/lab/lab_C/lab_18/a3.s",
		"/home/anton/ASM/lab/lab_C/lab_06/a2.s",
		"/home/anton/ASM/lab/lab_C/lab_06/a3.s",
		"/home/anton/PABC/home/max_exam.pas",
		"/home/anton/ASM/lab/lab_C/lab_06/a1.s",
		"/home/anton/ASM/lab/lab_C/lab_04/a1.s",
		"/home/anton/ASM/lab/lab_C/lab_05/a1.s",
		"/home/anton/ASM/lab/lab_C/lab_04/a5.s",
		"/home/anton/ASM/lab/lab_C/lab_04/a4.s",
		"/home/anton/ASM/lab/lab_C/lab_04/a3.s",
		"/home/anton/ASM/lab/lab_C/lab_04/a2.s",
		"/home/anton/ASM/lab/lab_C/lab_03/a1.s",
		"/home/anton/ASM/lab/lab_C/lab_03/aa.s",
		"/home/anton/ASM/lab/lab_C/lab_03/ab.s",
		"/home/anton/ASM/lab/lab_C/lab_03/ac.s",
		"/home/anton/ASM/lab/lab_C/lab_03/ad.s",
		"/home/anton/ASM/lab/lab_C/lab_03/ae.s",
		"/home/anton/C/experiments/asm/c5.c",
		"/home/anton/C/experiments/asm/asm5.asm",
		"/home/anton/C/experiments/asm/asm6.asm",
		"/home/anton/C/experiments/asm/c1.c",
		"/home/anton/C/experiments/asm/asm1.asm",
		"/home/anton/C/experiments/asm/c2.c",
		"/home/anton/C/experiments/asm/asm2.asm",
		"/home/anton/C/experiments/asm/c3.c",
		"/home/anton/C/experiments/asm/asm3.asm",
		"/home/anton/C/experiments/asm/c4.c",
		"/home/anton/C/experiments/asm/asm4.asm",
		"/home/anton/C/home/Max_lab_9/cmake-build-debug/rec.dat",
		"/home/anton/C/c.sublime-project",
		"/home/anton/C/lab/lab_13/a1out.bin",
		"/home/anton/C/lab/lab_17/lab.h",
		"/home/anton/C/lab/lab_17/rwr.c",
		"/home/anton/C/lab/lab_17/task.c",
		"/home/anton/C/lab/lab_17/main.c",
		"/home/anton/C/lab/lab_15/rwr.c",
		"/home/anton/C/home/Project/libs/menu2.c",
		"/home/anton/C/home/Project/libs/menu.c",
		"/home/anton/C/home/Project/main.c",
		"/home/anton/C/home/Project/headers/project.h",
		"/home/anton/C/univer/study/MRecursion/a5.c",
		"/home/anton/C/univer/study/MRecursion/a4.c",
		"/home/anton/C/univer/study/MRecursion/a3.c",
		"/home/anton/C/univer/study/MRecursion/a1.c",
		"/home/anton/C/univer/study/MRecursion/a2.c",
		"/home/anton/C/lab/lab_15/a1.c",
		"/home/anton/C/lab/lab_15/a1.h",
		"/home/anton/C/lab/lab_15/struct.c",
		"/home/anton/C/training/8lowlevel/read.c",
		"/home/anton/C/experiments/IntVarCheck/input.c",
		"/home/anton/C/experiments/IntVarCheck/test.c",
		"/home/anton/C/experiments/IntVarCheck/input.h",
		"/home/anton/C/lab/lab_15/a1in.txt",
		"/home/anton/C/lab/lab_13/a13.c",
		"/home/anton/C/univer/practice/pr_02/28.c",
		"/home/anton/C/univer/practice/pr_02/15.c",
		"/home/anton/C/univer/practice/pr_02/8.c",
		"/home/anton/C/lab/lab_13/a1.c",
		"/home/anton/C/lab/lab_13/a12.c",
		"/home/anton/C/lab/lab_10/a3.c",
		"/home/anton/C/lab/lab_13/tobin.c",
		"/home/anton/C/lab/lab_13/a1in.txt",
		"/home/anton/C/lab/lab_13/a1in.bin",
		"/home/anton/C/lab/lab_13/a1out.txt",
		"/home/anton/C/experiments/dialog.c",
		"/home/anton/C/experiments/clock.c",
		"/home/anton/.config/sublime-text-3/Packages/QuickThemes/QuickThemes.sublime-settings",
		"/home/anton/C/lab/lab_10/a22.c",
		"/home/anton/C/lab/lab_10/a1.c",
		"/home/anton/C/lab/lab_11/a2.c",
		"/home/anton/C/lab/lab_11/a1.c",
		"/home/anton/C/lab/lab_10/a2.c",
		"/home/anton/C/experiments/SanyaEbet/struct.c",
		"/home/anton/C/experiments/SanyaEbet/arrayequasion.c",
		"/home/anton/C/lab/lab_09/a1.c",
		"/home/anton/C/lab/lab_09/a2.c",
		"/home/anton/C/lab/lab_09/a3.c",
		"/home/anton/C/lab/lab.sublime-project",
		"/home/anton/C/lab/lab_wrong/lab_11/a1.c",
		"/home/anton/C/lab/lab_wrong/lab_11/a2.c",
		"/home/anton/C/experiments/SanyaEbet/shoulders.h",
		"/home/anton/C/experiments/SanyaEbet/shoulders.c",
		"/home/anton/C/experiments/SanyaEbet/main.c",
		"/home/anton/C/experiments/pic/main.c",
		"/home/anton/C/experiments/pic/main,c",
		"/home/anton/C/experiments/SanyaEbet/main,c",
		"/home/anton/C/experiments/SanyaEbet/a2.c",
		"/home/anton/C/experiments/locale/a1.c",
		"/home/anton/C/lab/lab_07/a1.c",
		"/home/anton/C/lab/lab_07/a11.c",
		"/home/anton/C/lab/lab_07/a2.c",
		"/home/anton/C/lab/lab_07/a3.c",
		"/home/anton/C/lab/lab_07/a4.c",
		"/home/anton/C/lab/lab_07/a5.c",
		"/home/anton/C/lab/lab_07/a51.c",
		"/home/anton/C/lab/lab_wrong/lab_11/a3.c",
		"/home/anton/C/lab/lab_wrong/lab_09/a2.c",
		"/home/anton/C/experiments/ifbool/void.c",
		"/home/anton/C/lab/lab_12/a1.c",
		"/home/anton/C/lab/lab_11/a3.c",
		"/home/anton/C/lab/lab_09/input.h",
		"/home/anton/C/lab/lab_09/check.c",
		"/home/anton/C/lab/lab_09/input.c",
		"/home/anton/C/lab/lab_09/ForSanya.c",
		"/home/anton/C/lab/lab_05/a2.c",
		"/home/anton/C/lab/lab_08/a2.c",
		"/home/anton/C/lab/lab_08/a1.c",
		"/home/anton/C/lab/lab_07/a52.c",
		"/home/anton/PY/Calc.py",
		"/home/anton/C/lab/lab_06/a6.c",
		"/home/anton/C/lab/lab_06/a5.c"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"call write",
			"pushl $0x0",
			"pushl $0x1",
			"varibles",
			"Initialzing",
			"var",
			"stepx",
			"rightx",
			"leftx",
			"a",
			"897",
			"do",
			"program c6;\nvar a, j:integer;\nfunction is_simple(x:integer):boolean;\nvar i:integer;\nf:boolean;\nbegin\n\tf:= true;\n\tif ((x mod 2 = 0) and (x <> 2)) or (x = 1) then\n\t\tf:= false\n\telse\n\t\tfor i:=3 to trunc(sqrt(x)) + 1 do \n\t\t\tif x mod i = 0 then\n\t\t\t\tf:= false;\n\tif f = false then\n\t\tis_simple:= false\n\telse\n\t\tis_simple:= true;\nend;\n\nbegin\n\tread(a);\n\tfor j:=1 to a do\n\t\tif is_simple(j) = true then\n\t\t\twrite(j, ' ');\n\twriteln;\nend.",
			"m",
			"sch2"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"pushl $STDIN",
			"pushl $STDOUT",
			"flag",
			"c",
			"b",
			"a",
			"ch",
			"sch1"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "lab/RGR/main.s",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 619,
						"regions":
						{
						},
						"selection":
						[
							[
								495,
								495
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/GAS-x86 (or x64) highlighting scheme/Assembly x86 AT&T.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "lab/RGR/menu.s",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10483,
						"regions":
						{
						},
						"selection":
						[
							[
								10082,
								10082
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/GAS-x86 (or x64) highlighting scheme/Assembly x86 AT&T.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9464.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lab/RGR/routines.s",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5209,
						"regions":
						{
						},
						"selection":
						[
							[
								3692,
								3692
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/GAS-x86 (or x64) highlighting scheme/Assembly x86 AT&T.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 3448.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lab/lab_05/routines.s",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5247,
						"regions":
						{
						},
						"selection":
						[
							[
								3939,
								3939
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/GAS-x86 (or x64) highlighting scheme/Assembly x86 AT&T.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4233.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/anton/C/lab/lab_15/menu.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8887,
						"regions":
						{
						},
						"selection":
						[
							[
								1562,
								1562
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1961,
										1962
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										1896,
										1897
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2366,
										2367
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1561,
										1562
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 31.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/C++/C++ Single File.sublime-build",
	"project": "asm.sublime-project",
	"replace":
	{
		"height": 71.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/PABC/Calc.pas"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 219.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
